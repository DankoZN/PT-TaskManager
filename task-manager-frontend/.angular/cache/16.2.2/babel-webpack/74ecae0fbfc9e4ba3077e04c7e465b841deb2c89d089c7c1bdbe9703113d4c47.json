{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TaskListComponent = class TaskListComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.newTask = {};\n  }\n  ngOnInit() {\n    this.loadTasks();\n  }\n  loadTasks() {\n    this.taskService.getTasks().subscribe(data => {\n      this.tasks = data;\n    });\n  }\n  editTask(taskId) {}\n  deleteTask(taskId) {\n    const confirmDelete = confirm('¿Estás seguro de que deseas eliminar esta tarea?');\n    if (confirmDelete) {\n      this.taskService.deleteTask(taskId).subscribe(() => {\n        this.loadTasks();\n      });\n    }\n  }\n  createTask() {\n    this.taskService.createTask(this.newTask).subscribe(() => {\n      this.newTask = {};\n      this.loadTasks();\n    });\n  }\n};\nTaskListComponent = __decorate([Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})], TaskListComponent);","map":{"version":3,"names":["Component","TaskListComponent","constructor","taskService","tasks","newTask","ngOnInit","loadTasks","getTasks","subscribe","data","editTask","taskId","deleteTask","confirmDelete","confirm","createTask","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/dzamarin/Desktop/task-manager-frontend/src/app/task-list/task-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css'],\n})\nexport class TaskListComponent implements OnInit {\n  tasks: any[] = [];\n  newTask: any = {};\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.loadTasks();\n  }\n\n  loadTasks() {\n    this.taskService.getTasks().subscribe((data: any) => {\n      this.tasks = data;\n    });\n  }\n\n  editTask(taskId: number) {\n  }\n\n  deleteTask(taskId: number) {\n    const confirmDelete = confirm('¿Estás seguro de que deseas eliminar esta tarea?');\n\n    if (confirmDelete) {\n      this.taskService.deleteTask(taskId).subscribe(() => {\n        this.loadTasks();\n      });\n    }\n  }\n\n  createTask() {\n    this.taskService.createTask(this.newTask).subscribe(() => {\n      this.newTask = {};\n      this.loadTasks(); \n    });\n  }\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,OAAO,GAAQ,EAAE;EAE8B;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MAClD,IAAI,CAACN,KAAK,GAAGM,IAAI;IACnB,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAACC,MAAc,GACvB;EAEAC,UAAUA,CAACD,MAAc;IACvB,MAAME,aAAa,GAAGC,OAAO,CAAC,kDAAkD,CAAC;IAEjF,IAAID,aAAa,EAAE;MACjB,IAAI,CAACX,WAAW,CAACU,UAAU,CAACD,MAAM,CAAC,CAACH,SAAS,CAAC,MAAK;QACjD,IAAI,CAACF,SAAS,EAAE;MAClB,CAAC,CAAC;;EAEN;EAEAS,UAAUA,CAAA;IACR,IAAI,CAACb,WAAW,CAACa,UAAU,CAAC,IAAI,CAACX,OAAO,CAAC,CAACI,SAAS,CAAC,MAAK;MACvD,IAAI,CAACJ,OAAO,GAAG,EAAE;MACjB,IAAI,CAACE,SAAS,EAAE;IAClB,CAAC,CAAC;EACJ;CAED;AApCYN,iBAAiB,GAAAgB,UAAA,EAL7BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWnB,iBAAiB,CAoC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}