{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../task.service\";\nimport * as i2 from \"@angular/common\";\nfunction TaskListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_2_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editTask(task_r2.id));\n    });\n    i0.ɵɵtext(7, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_2_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteTask(task_r2.id));\n    });\n    i0.ɵɵtext(9, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.title, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r2.description);\n  }\n}\nexport class TaskListComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.loadTasks();\n  }\n  loadTasks() {\n    this.taskService.getTasks().subscribe(data => {\n      this.tasks = data;\n    });\n  }\n  editTask(taskId) {\n    // Aquí puedes implementar la lógica para editar la tarea con el ID taskId\n    // Por ejemplo, abrir un formulario de edición o una página de edición\n    // y pasar los detalles de la tarea a través de un Input property\n    // Puedes utilizar un servicio de comunicación entre componentes si es necesario.\n  }\n  deleteTask(taskId) {\n    // Pregunta al usuario si está seguro de eliminar la tarea\n    const confirmDelete = confirm('¿Estás seguro de que deseas eliminar esta tarea?');\n    if (confirmDelete) {\n      // Llamada al servicio para eliminar la tarea por su ID\n      this.taskService.deleteTask(taskId).subscribe(() => {\n        // Actualiza la lista de tareas después de eliminar la tarea\n        this.loadTasks();\n      });\n    }\n  }\n}\n_class = TaskListComponent;\n_class.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TaskService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-task-list\"]],\n  decls: 16,\n  vars: 3,\n  consts: [[1, \"bg-blue-200\", \"p-4\"], [1, \"grid\", \"grid-cols-1\", \"sm:grid-cols-2\", \"md:grid-cols-3\", \"lg:grid-cols-4\", \"gap-4\"], [\"class\", \"bg-white shadow-md rounded-lg p-4\", 4, \"ngFor\", \"ngForOf\"], [3, \"submit\"], [\"taskForm\", \"ngForm\"], [1, \"mt-4\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"px-4\", \"py-2\", \"bg-green-500\", \"text-white\", \"rounded-md\"], [1, \"bg-white\", \"shadow-md\", \"rounded-lg\", \"p-4\"], [1, \"bg-blue-200\", \"text-blue-900\", \"font-semibold\", \"mb-2\", \"p-2\", \"rounded\"], [1, \"mt-2\"], [1, \"px-4\", \"py-2\", \"bg-blue-500\", \"text-white\", \"rounded-md\", 3, \"click\"], [1, \"px-4\", \"py-2\", \"bg-red-500\", \"text-white\", \"rounded-md\", 3, \"click\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, TaskListComponent_div_2_Template, 10, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 3, 4);\n      i0.ɵɵlistener(\"submit\", function TaskListComponent_Template_form_submit_3_listener() {\n        return ctx.createTask();\n      });\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"T\\u00EDtulo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.newTask.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Descripci\\u00F3n:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"textarea\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_Template_textarea_ngModelChange_12_listener($event) {\n        return ctx.newTask.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"button\", 10);\n      i0.ɵɵtext(15, \"Agregar Tarea\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.description);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TaskListComponent_div_2_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r4","task_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editTask","id","TaskListComponent_div_2_Template_button_click_8_listener","ctx_r5","deleteTask","ɵɵadvance","ɵɵtextInterpolate1","title","ɵɵtextInterpolate","description","TaskListComponent","constructor","taskService","tasks","ngOnInit","loadTasks","getTasks","subscribe","data","taskId","confirmDelete","confirm","ɵɵdirectiveInject","i1","TaskService","selectors","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","ɵɵtemplate","TaskListComponent_div_2_Template","TaskListComponent_Template_form_submit_3_listener","createTask","TaskListComponent_Template_input_ngModelChange_8_listener","$event","newTask","TaskListComponent_Template_textarea_ngModelChange_12_listener","ɵɵproperty"],"sources":["/Users/dzamarin/Desktop/task-manager-frontend/src/app/task-list/task-list.component.ts","/Users/dzamarin/Desktop/task-manager-frontend/src/app/task-list/task-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css'],\n})\nexport class TaskListComponent implements OnInit {\n  tasks: any[] = [];\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.loadTasks();\n  }\n\n  loadTasks() {\n    this.taskService.getTasks().subscribe((data: any) => {\n      this.tasks = data;\n    });\n  }\n\n  editTask(taskId: number) {\n    // Aquí puedes implementar la lógica para editar la tarea con el ID taskId\n    // Por ejemplo, abrir un formulario de edición o una página de edición\n    // y pasar los detalles de la tarea a través de un Input property\n    // Puedes utilizar un servicio de comunicación entre componentes si es necesario.\n  }\n\n  deleteTask(taskId: number) {\n    // Pregunta al usuario si está seguro de eliminar la tarea\n    const confirmDelete = confirm('¿Estás seguro de que deseas eliminar esta tarea?');\n\n    if (confirmDelete) {\n      // Llamada al servicio para eliminar la tarea por su ID\n      this.taskService.deleteTask(taskId).subscribe(() => {\n        // Actualiza la lista de tareas después de eliminar la tarea\n        this.loadTasks();\n      });\n    }\n  }\n}\n","<div class=\"bg-blue-200 p-4\">\n  <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n    <div *ngFor=\"let task of tasks\" class=\"bg-white shadow-md rounded-lg p-4\">\n      <!-- Contenido de la card de la tarea -->\n      <div class=\"bg-blue-200 text-blue-900 font-semibold mb-2 p-2 rounded\">\n        {{ task.title }}\n      </div>\n      <p class=\"mt-2\">{{ task.description }}</p>\n      <div class=\"mt-4\">\n        <button (click)=\"editTask(task.id)\" class=\"px-4 py-2 bg-blue-500 text-white rounded-md\">Editar</button>\n        <button (click)=\"deleteTask(task.id)\" class=\"px-4 py-2 bg-red-500 text-white rounded-md\">Eliminar</button>\n      </div>\n    </div>\n  </div>\n\n  <form (submit)=\"createTask()\" #taskForm=\"ngForm\">\n    <div class=\"mt-4\">\n      <label for=\"title\">Título:</label>\n      <input type=\"text\" id=\"title\" name=\"title\" [(ngModel)]=\"newTask.title\" required>\n    </div>\n    <div class=\"mt-4\">\n      <label for=\"description\">Descripción:</label>\n      <textarea id=\"description\" name=\"description\" [(ngModel)]=\"newTask.description\" required></textarea>\n    </div>\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"px-4 py-2 bg-green-500 text-white rounded-md\">Agregar Tarea</button>\n    </div>\n  </form>\n</div>\n"],"mappings":";;;;;;;ICEIA,EAAA,CAAAC,cAAA,cAA0E;IAGtED,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,YAAgB;IAAAD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC1CH,EAAA,CAAAC,cAAA,aAAkB;IACRD,EAAA,CAAAI,UAAA,mBAAAC,yDAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,QAAA,CAAAL,OAAA,CAAAM,EAAA,CAAiB;IAAA,EAAC;IAAqDf,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACvGH,EAAA,CAAAC,cAAA,iBAAyF;IAAjFD,EAAA,CAAAI,UAAA,mBAAAY,yDAAA;MAAA,MAAAV,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAO,MAAA,GAAAjB,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAI,MAAA,CAAAC,UAAA,CAAAT,OAAA,CAAAM,EAAA,CAAmB;IAAA,EAAC;IAAoDf,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAL1GH,EAAA,CAAAmB,SAAA,GACF;IADEnB,EAAA,CAAAoB,kBAAA,MAAAX,OAAA,CAAAY,KAAA,MACF;IACgBrB,EAAA,CAAAmB,SAAA,GAAsB;IAAtBnB,EAAA,CAAAsB,iBAAA,CAAAb,OAAA,CAAAc,WAAA,CAAsB;;;ADC5C,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,KAAK,GAAU,EAAE;EAE8B;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MAClD,IAAI,CAACL,KAAK,GAAGK,IAAI;IACnB,CAAC,CAAC;EACJ;EAEAlB,QAAQA,CAACmB,MAAc;IACrB;IACA;IACA;IACA;EAAA;EAGFf,UAAUA,CAACe,MAAc;IACvB;IACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,kDAAkD,CAAC;IAEjF,IAAID,aAAa,EAAE;MACjB;MACA,IAAI,CAACR,WAAW,CAACR,UAAU,CAACe,MAAM,CAAC,CAACF,SAAS,CAAC,MAAK;QACjD;QACA,IAAI,CAACF,SAAS,EAAE;MAClB,CAAC,CAAC;;EAEN;;SAjCWL,iBAAiB;;mBAAjBA,MAAiB,EAAAxB,EAAA,CAAAoC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAjBd,MAAiB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9B7C,EAAA,CAAAC,cAAA,aAA6B;MAEzBD,EAAA,CAAA+C,UAAA,IAAAC,gCAAA,kBAUM;MACRhD,EAAA,CAAAG,YAAA,EAAM;MAENH,EAAA,CAAAC,cAAA,iBAAiD;MAA3CD,EAAA,CAAAI,UAAA,oBAAA6C,kDAAA;QAAA,OAAUH,GAAA,CAAAI,UAAA,EAAY;MAAA,EAAC;MAC3BlD,EAAA,CAAAC,cAAA,aAAkB;MACGD,EAAA,CAAAE,MAAA,mBAAO;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAClCH,EAAA,CAAAC,cAAA,eAAgF;MAArCD,EAAA,CAAAI,UAAA,2BAAA+C,0DAAAC,MAAA;QAAA,OAAAN,GAAA,CAAAO,OAAA,CAAAhC,KAAA,GAAA+B,MAAA;MAAA,EAA2B;MAAtEpD,EAAA,CAAAG,YAAA,EAAgF;MAElFH,EAAA,CAAAC,cAAA,aAAkB;MACSD,EAAA,CAAAE,MAAA,yBAAY;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAC7CH,EAAA,CAAAC,cAAA,mBAAyF;MAA3CD,EAAA,CAAAI,UAAA,2BAAAkD,8DAAAF,MAAA;QAAA,OAAAN,GAAA,CAAAO,OAAA,CAAA9B,WAAA,GAAA6B,MAAA;MAAA,EAAiC;MAAUpD,EAAA,CAAAG,YAAA,EAAW;MAEtGH,EAAA,CAAAC,cAAA,cAAkB;MAC2DD,EAAA,CAAAE,MAAA,qBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAvB7EH,EAAA,CAAAmB,SAAA,GAAQ;MAARnB,EAAA,CAAAuD,UAAA,YAAAT,GAAA,CAAAnB,KAAA,CAAQ;MAgBe3B,EAAA,CAAAmB,SAAA,GAA2B;MAA3BnB,EAAA,CAAAuD,UAAA,YAAAT,GAAA,CAAAO,OAAA,CAAAhC,KAAA,CAA2B;MAIxBrB,EAAA,CAAAmB,SAAA,GAAiC;MAAjCnB,EAAA,CAAAuD,UAAA,YAAAT,GAAA,CAAAO,OAAA,CAAA9B,WAAA,CAAiC"},"metadata":{},"sourceType":"module","externalDependencies":[]}